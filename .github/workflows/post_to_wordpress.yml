name: Auto Publish PDF Flipbook to WordPress

on:
  push:
    paths:
      - '**/*.pdf'
  workflow_dispatch:

jobs:
  post_to_wordpress:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: üîß Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: üîç Detect which PDF changed
        id: detect
        run: |
          echo "Looking for changed PDF..."
          # Look at what was added/modified in this push
          PDF=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                | grep -E '\.pdf$' | head -n1)
          # Fallback: first PDF in repo
          if [ -z "$PDF" ]; then
            PDF=$(find . -type f -name '*.pdf' | head -n1 | sed 's|^\./||')
          fi
          if [ -z "$PDF" ]; then
            echo "‚ùå No PDF found. Exiting."
            echo "found=false" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Will process PDF: $PDF"
            echo "found=true"  >> $GITHUB_OUTPUT
            echo "pdf=$PDF"   >> $GITHUB_OUTPUT
          fi

      - name: üö´ Exit early if no PDF
        if: steps.detect.outputs.found == 'false'
        run: exit 0

      - name: üìù Publish to WordPress
        env:
          WP_SITE_URL:     ${{ secrets.WP_SITE_URL }}
          WP_USERNAME:     ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
        run: |
          FILE="${{ steps.detect.outputs.pdf }}"
          TITLE=$(basename "$FILE" .pdf | sed 's/[-_]/ /g')
          PDF_URL="$WP_SITE_URL/wp-content/uploads/$(basename "$FILE")"
          CATEGORY_NAME="Flipbook-Personal Development"

          echo "‚úîÔ∏è Title: $TITLE"
          echo "‚úîÔ∏è PDF URL: $PDF_URL"

          # Find or create category
          CAT_ID=$(curl -s "${WP_SITE_URL}/wp-json/wp/v2/categories?search=$CATEGORY_NAME" \
                    -u "$WP_USERNAME:$WP_APP_PASSWORD" \
                 | jq -r '.[0].id // empty')
          if [ -z "$CAT_ID" ]; then
            echo "‚ûï Creating category ‚Äú$CATEGORY_NAME‚Äù"
            CAT_ID=$(curl -s -X POST "${WP_SITE_URL}/wp-json/wp/v2/categories" \
                       -u "$WP_USERNAME:$WP_APP_PASSWORD" \
                       -H "Content-Type: application/json" \
                       -d "{\"name\":\"$CATEGORY_NAME\"}" \
                    | jq -r '.id')
          fi
          echo "üìÇ Category ID: $CAT_ID"

          # Build post JSON
          read -r -d '' POST_JSON <<EOF
{
  "title": "$TITLE",
  "content": "üìò Read the flipbook PDF: <a href=\"$PDF_URL\">$TITLE</a>",
  "status": "publish",
  "categories": [$CAT_ID]
}
EOF

          echo "üì§ Sending to WordPress‚Ä¶"
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "${WP_SITE_URL}/wp-json/wp/v2/posts" \
                       -u "$WP_USERNAME:$WP_APP_PASSWORD" \
                       -H "Content-Type: application/json" \
                       -d "$POST_JSON")

          BODY=$(echo "$RESPONSE" | sed '$d')
          STATUS=$(echo "$RESPONSE" | tail -n1)

          echo "üñ•Ô∏è Status: $STATUS"
          echo "üñ®Ô∏è Body: $BODY"

          if [ "$STATUS" -ge 400 ]; then
            echo "‚ùå Failed to create post"
            exit 1
          fi
          echo "‚úÖ Post published!"
